{"ast":null,"code":"var _jsxFileName = \"D:\\\\src\\\\intellij projects\\\\corkboard\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\ItemCard.jsx\",\n  _s = $RefreshSig$();\nimport \"../css/ItemCard.css\";\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemCard = _ref => {\n  _s();\n  let {\n    item\n  } = _ref;\n  const [copySuccess, setCopySuccess] = useState(\"\");\n  const textAreaRef = useRef(null);\n  function copyToClipboard(e) {\n    textAreaRef.current.select();\n    document.execCommand(\"copy\");\n    // This is just personal preference.\n    // I prefer to not show the whole text area selected.\n    e.target.focus();\n    setCopySuccess(\"Copied!\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-card\",\n    onClick: copyToClipboard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-large\",\n        children: item.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-small\",\n        children: [\"unable after \", item.unableAt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemCard, \"kksiMRHFS5EhLBnkQUJH0tKU5No=\");\n_c = ItemCard;\nexport default ItemCard;\nvar _c;\n$RefreshReg$(_c, \"ItemCard\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","ItemCard","_ref","_s","item","copySuccess","setCopySuccess","textAreaRef","copyToClipboard","e","current","select","document","execCommand","target","focus","className","onClick","children","message","fileName","_jsxFileName","lineNumber","columnNumber","unableAt","_c","$RefreshReg$"],"sources":["D:/src/intellij projects/corkboard/src/main/frontend/src/components/ItemCard.jsx"],"sourcesContent":["import \"../css/ItemCard.css\";\r\nimport { useState, useRef } from \"react\";\r\n\r\nconst ItemCard = ({ item }) => {\r\n  const [copySuccess, setCopySuccess] = useState(\"\");\r\n  const textAreaRef = useRef(null);\r\n\r\n  function copyToClipboard(e) {\r\n    textAreaRef.current.select();\r\n    document.execCommand(\"copy\");\r\n    // This is just personal preference.\r\n    // I prefer to not show the whole text area selected.\r\n    e.target.focus();\r\n    setCopySuccess(\"Copied!\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-card\" onClick={copyToClipboard}>\r\n      <div>\r\n        <p className=\"text-large\">{item.message}</p>\r\n      </div>\r\n      <div>\r\n        <p className=\"text-small\">unable after {item.unableAt}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemCard;\r\n"],"mappings":";;AAAA,OAAO,qBAAqB;AAC5B,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAGC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACxB,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMU,WAAW,GAAGT,MAAM,CAAC,IAAI,CAAC;EAEhC,SAASU,eAAeA,CAACC,CAAC,EAAE;IAC1BF,WAAW,CAACG,OAAO,CAACC,MAAM,EAAE;IAC5BC,QAAQ,CAACC,WAAW,CAAC,MAAM,CAAC;IAC5B;IACA;IACAJ,CAAC,CAACK,MAAM,CAACC,KAAK,EAAE;IAChBT,cAAc,CAAC,SAAS,CAAC;EAC3B;EAEA,oBACEN,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAACC,OAAO,EAAET,eAAgB;IAAAU,QAAA,gBAClDlB,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAGgB,SAAS,EAAC,YAAY;QAAAE,QAAA,EAAEd,IAAI,CAACe;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxC,eACNvB,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAGgB,SAAS,EAAC,YAAY;QAAAE,QAAA,GAAC,eAAa,EAACd,IAAI,CAACoB,QAAQ;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACpB,EAAA,CAvBIF,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}